<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vegas Open Network (VONet) - Digital Card</title>

    <!-- Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Google Fonts: Inter -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- QR Code Generation Library -->
    <script src="https://cdn.jsdelivr.net/npm/qrcodejs@1.0.0/qrcode.min.js"></script>

    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        /* Styles for smooth modal transitions */
        #shareModalOverlay {
            transition: opacity 0.3s ease-in-out;
        }

        #shareModalPanel {
            transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
        }

        #shareModalOverlay.hidden #shareModalPanel {
            transform: scale(0.95);
            opacity: 0;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-gray-900 to-blue-900 text-white flex items-center justify-center min-h-screen p-4">
    
    <!-- Main Card Container -->
    <div class="w-full max-w-sm mx-auto bg-gray-800/50 backdrop-blur-xl border border-gray-700 rounded-3xl shadow-2xl p-6 md:p-8 text-center">

        <!-- Header Section with Profile Image -->
        <header class="mb-6">
            <!-- Profile Picture/Logo Placeholder -->
            <img src="https://placehold.co/128x128/1D4ED8/FFFFFF?text=VONet"
                 alt="VONet Logo"
                 class="w-24 h-24 rounded-full mx-auto mb-4 border-2 border-blue-500 shadow-lg">
            <h1 class="text-2xl font-bold text-white">Vegas Open Network</h1>
            <p class="text-gray-400 mt-1">Info Card</p>
        </header>

        <!-- Links Section -->
        <div class="space-y-4 mb-6">
            <a href="VONet Nonprofit Business Plan.pdf" target="_blank" rel="noopener noreferrer" class="flex items-center justify-center w-full bg-blue-600 text-white font-semibold py-3 px-4 rounded-xl shadow-lg hover:bg-blue-700 hover:scale-105 transform transition-all duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"></path><polyline points="14 2 14 8 20 8"></polyline></svg>
                Information PDF
            </a>
            <a href="https://vonet.org/" target="_blank" rel="noopener noreferrer" class="flex items-center w-full bg-gray-700/80 text-gray-200 font-medium py-3 px-4 rounded-xl hover:bg-gray-600 transition-colors duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-3"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.72"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.72-1.72"></path></svg>
                VONet Website
            </a>
            <a href="https://wiki.vonet.org" target="_blank" rel="noopener noreferrer" class="flex items-center w-full bg-gray-700/80 text-gray-200 font-medium py-3 px-4 rounded-xl hover:bg-gray-600 transition-colors duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-3"><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path></svg>
                VONet Wiki
            </a>
            <a href="mailto:support@vonet.org" class="flex items-center w-full bg-gray-700/80 text-gray-200 font-medium py-3 px-4 rounded-xl hover:bg-gray-600 transition-colors duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-3"><rect width="20" height="16" x="2" y="4" rx="2"></rect><path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"></path></svg>
                Contact Support
            </a>
        </div>

        <!-- Action Buttons -->
        <div class="border-t border-gray-700 pt-6 flex gap-4">
            <button id="saveContactButton" class="flex items-center justify-center w-full bg-green-600 text-white font-semibold py-3 px-4 rounded-xl shadow-lg hover:bg-green-700 hover:scale-105 transform transition-all duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M19 8v6"></path><path d="M22 11h-6"></path></svg>
                Save Contact
            </button>
            <button id="openShareModalButton" class="flex items-center justify-center w-full bg-gray-600 text-white font-semibold py-3 px-4 rounded-xl shadow-lg hover:bg-gray-500 hover:scale-105 transform transition-all duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path><polyline points="16 6 12 2 8 6"></polyline><line x1="12" y1="2" x2="12" y2="15"></line></svg>
                Share
            </button>
        </div>
    </div>

    <!-- Share Modal -->
    <div id="shareModalOverlay" class="fixed inset-0 bg-black/70 flex items-center justify-center p-4 hidden opacity-0">
        <div id="shareModalPanel" class="bg-gray-800/80 backdrop-blur-xl border border-gray-600 rounded-3xl shadow-2xl w-full max-w-xs p-6 text-center transform scale-95 opacity-0">
            <h2 class="text-xl font-bold text-white mb-2">Share this Card</h2>
            <p class="text-gray-400 mb-4">Scan the code or copy the link.</p>

            <div id="qrCodeDisplay" class="flex justify-center bg-white p-3 rounded-xl mb-4"></div>

            <button id="copyLinkButton" class="w-full bg-blue-600 text-white font-semibold py-2.5 px-4 rounded-xl hover:bg-blue-700 transition-colors">Copy Link</button>

            <button id="closeShareModalButton" class="mt-6 text-gray-400 hover:text-white font-medium">Close</button>
        </div>
    </div>

    <script>
        // --- DOM Element References ---
        const openShareModalButton = document.getElementById('openShareModalButton');
        const closeShareModalButton = document.getElementById('closeShareModalButton');
        const shareModalOverlay = document.getElementById('shareModalOverlay');
        const shareModalPanel = document.getElementById('shareModalPanel');
        const qrCodeDisplayElement = document.getElementById('qrCodeDisplay');
        const copyLinkButton = document.getElementById('copyLinkButton');
        const saveContactButton = document.getElementById('saveContactButton');

        // --- State ---
        let qrCodeObject = null;

        // --- Functions ---

        /**
         * Opens the share modal with a smooth animation.
         */
        function handleOpenShareModal() {
            shareModalOverlay.classList.remove('hidden');
            setTimeout(() => {
                shareModalOverlay.classList.remove('opacity-0');
                shareModalPanel.classList.remove('scale-95', 'opacity-0');
            }, 10);

            if (!qrCodeObject) {
                qrCodeObject = new QRCode(qrCodeDisplayElement, {
                    text: window.location.href,
                    width: 192,
                    height: 192,
                    colorDark: "#000000",
                    colorLight: "#ffffff",
                    correctLevel: QRCode.CorrectLevel.H
                });
            }
        }

        /**
         * Closes the share modal with a smooth animation.
         */
        function handleCloseShareModal() {
            shareModalOverlay.classList.add('opacity-0');
            shareModalPanel.classList.add('scale-95', 'opacity-0');
            setTimeout(() => {
                shareModalOverlay.classList.add('hidden');
            }, 300); // Match the duration of the CSS transition
        }

        /**
         * Copies the current page URL to the clipboard and provides user feedback.
         */
        function handleCopyLink() {
            const linkToCopy = window.location.href;
            navigator.clipboard.writeText(linkToCopy).then(() => {
                copyLinkButton.textContent = 'Copied!';
                setTimeout(() => {
                    copyLinkButton.textContent = 'Copy Link';
                }, 2000);
            }).catch(err => {
                console.error('Clipboard API failed: ', err);
                try {
                    const textarea = document.createElement('textarea');
                    textarea.value = linkToCopy;
                    textarea.style.position = 'fixed';
                    document.body.appendChild(textarea);
                    textarea.focus();
                    textarea.select();
                    document.execCommand('copy');
                    document.body.removeChild(textarea);
                    copyLinkButton.textContent = 'Copied!';
                    setTimeout(() => {
                        copyLinkButton.textContent = 'Copy Link';
                    }, 2000);
                } catch (fallbackErr) {
                    console.error('Fallback copy failed: ', fallbackErr);
                    copyLinkButton.textContent = 'Failed to Copy';
                    setTimeout(() => {
                        copyLinkButton.textContent = 'Copy Link';
                    }, 2000);
                }
            });
        }

        /**
         * Generates and triggers the download of a VCF (Virtual Contact File).
         * This version is more robust for better compatibility.
         */
        function handleSaveContact() {
            // Define contact information
            const contact = {
                name: 'Vegas Open Network',
                org: 'VONet',
                email: 'support@vonet.org',
                url: window.location.href
            };

            // Create VCF content string using CRLF (\r\n) for line endings
            const vcfContent = [
                'BEGIN:VCARD',
                'VERSION:3.0',
                `N:;${contact.name};;;`, // Structured Name
                `FN:${contact.name}`,     // Formatted Name
                `ORG:${contact.org}`,
                `TEL;TYPE=WORK,VOICE:${contact.phone}`,
                `EMAIL:${contact.email}`,
                `URL:${contact.url}`,
                `NOTE:Contact saved from the VONet Digital Business Card.`,
                'END:VCARD'
            ].join('\r\n');

            // Create a Blob from the VCF content
            const blob = new Blob([vcfContent], { type: 'text/vcard;charset=utf-8' });

            // Create a temporary link to trigger the download
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'VONet.vcf';

            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);

            // Provide user feedback
            saveContactButton.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><path d="M20 6 9 17l-5-5"></path></svg>
                Saved!`;
            setTimeout(() => {
                saveContactButton.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M19 8v6"></path><path d="M22 11h-6"></path></svg>
                Save Contact`;
            }, 2500);
        }

        // --- Event Listeners ---
        openShareModalButton.addEventListener('click', handleOpenShareModal);
        closeShareModalButton.addEventListener('click', handleCloseShareModal);
        shareModalOverlay.addEventListener('click', (event) => {
            if (event.target === shareModalOverlay) {
                handleCloseShareModal();
            }
        });
        copyLinkButton.addEventListener('click', handleCopyLink);
        saveContactButton.addEventListener('click', handleSaveContact);

    </script>

    @RenderBody()
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>